{% import searchService.standardFilters as standardFilters %}

{% set translationDomain = "titles" %}

{% trans_default_domain translationDomain %}
{% set totalGroup = 0 %}
{% for filterBlock in filterBlocks %}
    {% set totalGroup = totalGroup + filterBlock.groupsFilters|length %}
{% endfor %}

{% set typeTabs = "standard-tabs" %}
{% if totalGroup > 0 %}
    {% set typeTabs = "side-tabs" %}
{% endif %}

{% for filterBlock in filterBlocks %}
    {% set groups = filterBlock.groupsFilters %}
    {% set style = null %}
    {% if filterBlock.parameter(constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilterBlock::PARAMETER_STYLE')) is not null %}
        {% set style = "style='"~filterBlock.parameter(constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilterBlock::PARAMETER_STYLE'))~"'" %}
    {% endif %}
    {{ standardFilters.optionsBlock() }}
    {{ standardFilters.eraserAll() }}

    <div class="tabbable tabs-left">
        <ul class="nav nav-tabs" id="myTab3">
            {% for group in groups %}
                {% if loop.first %}
                    <li class="tab-sky active">
                        <a data-toggle="tab" id="tab_{{ loop.index }}" href="#tab-{{ loop.index }}" tooltip="{{ group|trans({},translationDomain) }}">
                            {{ group|trans({},translationDomain) }}
                        </a>
                    </li>
                {% else %}
                    <li class="tab-red">
                        <a data-toggle="tab" id="tab_{{ loop.index }}" href="#tab-{{ loop.index }}" tooltip="{{ group|trans({},translationDomain) }}">
                            {{ group|trans({},translationDomain) }}
                        </a>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>

        <div class="tab-content" {{ style|raw }}>

            {% for group in groups %}
                {% set entityFilters = filterBlock.filtersByGroup(group) %}
                <div id="tab-{{ loop.index }}" class="tab-pane{% if loop.first %} active{% endif %}">
                    <div class="with-padding">
                        <div class="columns">
                            {% for filter in entityFilters %}
                                {% set typeFilter = filter.typeFilter %}
                                {% set groupFilter = searchService.getFilterGroupByFilter(typeFilter) %}
{#                                {% from groupFilter.macroTemplate import typeFilter %}#}
                                {{ searchService.renderFilter(groupFilter,typeFilter) }}
{#                                {{ attribute(standardFilters, typeFilter,[filter.label,filter.modelName]) }}#}
                                {#{% if typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_YES_NO') %}
                                    {{ standardFilters.yesNo(filter.label,filter.modelName) }}
                                {% elseif typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_INPUT') %}
                                    {{ standardFilters.input(filter.label,filter.modelName) }}
                                {% elseif typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_DATE') %}
                                    {{ standardFilters.date(filter.label,filter.modelName) }}
                                {% elseif typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_SELECT') %}
                                    {{ standardFilters.select(filter.label,filter.modelName,filter.getParameter('values')) }}
                                {% elseif typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_TODO') %}
                                    {{ standardFilters.todo(filter.label) }}
                                {% elseif typeFilter == constant('Tecnocreaciones\\Bundle\\ToolsBundle\\Model\\Search\\ModelFilter::TYPE_INPUT_FROM_TO') %}
                                    {{ filters.inputFromTo(filter.label,filter.modelName) }}
                                {% endif  %}#}
                                {#                                {{ customFilters.port(filter.modelName,filter) }}#}
                            {% endfor %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

{% endfor %}